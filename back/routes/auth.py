from flask import Blueprint, request, jsonify
from werkzeug.security import generate_password_hash, check_password_hash
from flask_jwt_extended import create_access_token, jwt_required, get_jwt_identity
from models import Employee
from extensions import db

auth_bp = Blueprint('auth', __name__)

# üîê –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@auth_bp.route('/register', methods=['POST'])
def register():
    data = request.get_json()

    if Employee.query.filter_by(email=data['email']).first():
        return jsonify({"error": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"}), 400

    new_user = Employee(
        first_name=data['first_name'],
        last_name=data['last_name'],
        email=data['email'],
        phone=data['phone'],
        password=generate_password_hash(data['password']),
        role='user',  # —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ
        position='–°–æ—Ç—Ä—É–¥–Ω–∏–∫'  # —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ
    )

    db.session.add(new_user)
    db.session.commit()

    return jsonify({"message": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"}), 201


# üîê –í—Ö–æ–¥ –∏ –≤—ã–¥–∞—á–∞ JWT
@auth_bp.route('/login', methods=['POST'])
def login():
    data = request.get_json()
    email = data.get('email')
    password = data.get('password')

    user = Employee.query.filter_by(email=email).first()
    if not user or not check_password_hash(user.password, password):
        return jsonify({"error": "–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å"}), 401

    # ‚úÖ –ü–µ—Ä–µ–¥–∞—ë–º identity –∫–∞–∫ —Å—Ç—Ä–æ–∫—É!
    access_token = create_access_token(identity=str(user.id))

    return jsonify({
        "access_token": access_token,
        "user_id": user.id
    }), 200


# üîê –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (—Å –ª–æ–≥–∞–º–∏)
@auth_bp.route('/profile', methods=['GET'])
@jwt_required()
def profile():
    # ‚úÖ –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É –∏ –ø—Ä–∏–≤–æ–¥–∏–º –∫ int
    user_id = int(get_jwt_identity())
    user = Employee.query.get(user_id)

    if not user:
        return jsonify({"error": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"}), 404

    return jsonify({
        "id": user.id,
        "name": f"{user.first_name} {user.last_name}",
        "email": user.email,
        "role": user.role
    }), 200


# üß™ –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –±–µ–∑ @jwt_required ‚Äî –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏
@auth_bp.route('/profile-debug', methods=['GET'])
def profile_debug():
    from flask import request

    headers = dict(request.headers)
    print("üß™ RAW HEADERS:", headers)

    return jsonify({
        "message": "–ó–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã",
        "headers": headers
    }), 200

